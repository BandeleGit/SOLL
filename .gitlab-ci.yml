variables:
  GIT_SUBMODULE_STRATEGY: recursive
  BASE_BINDIR: build
  TEST_SRCDIR: test/release
  TEST_ENVDIR: utils/ewasm-testbench

stages:
  - build
  - compile
  - test

.build_job_template: &build_job
  stage: build
  image: secondstate/soll:${OS}-${COMPILER}
  before_script:
    - rm -rf ${BASE_BINDIR}
    - mkdir ${BASE_BINDIR}
    - cd ${BASE_BINDIR}
  script:
    - cmake .. -DCMAKE_BUILD_TYPE=Debug -DSOLL_INCLUDE_TESTS=true
    - make -j2
  cache:
    key: ${OS}-${COMPILER}
    paths:
      - ${BASE_BINDIR}
    policy: push

.compile_job_template: &compile_job
  stage: compile
  image: secondstate/soll:${OS}-compile
  script:
    - bash -c "${BASE_BINDIR}/tools/soll/soll ${TEST_SRCDIR}/0-0-1.sol > ${BASE_BINDIR}/0-0-1.ll"
    - bash -c "${BASE_BINDIR}/tools/soll/soll ${TEST_SRCDIR}/0-0-2.sol > ${BASE_BINDIR}/0-0-2.ll"
    - bash -c "./utils/compile -v ${BASE_BINDIR}/*.ll || test -f ${BASE_BINDIR}/0-0-1.wasm -a -f ${BASE_BINDIR}/0-0-2.wasm"
  cache:
    key: ${OS}-${COMPILER}
    paths:
      - ${BASE_BINDIR}
    policy: pull-push

.test_job_template: &test_job
  stage: test
  image: secondstate/soll:${OS}-test
  before_script:
    - cp ${BASE_BINDIR}/*.wasm ${TEST_ENVDIR}
  script:
    - bash -c "cd ${BASE_BINDIR} && ctest"
    - bash -c "cd ${TEST_ENVDIR} && ./safeMath.js 0-0-1.wasm div 16 7"
    - bash -c "cd ${TEST_ENVDIR} && ./erc20.js 0-0-2.wasm {} _mint 0x1234567890123456789012345678901234567890 100"
    - bash -c 'cd ${TEST_ENVDIR} && ./erc20.js 0-0-2.wasm \{\"0\":\"64\",\"f5b24dcea0e9381721a8c72784d30cfe64c11b4591226269f839d095b3e9cf10\":\"64\"\} transfer 0x01 10'
    - bash -c 'cd ${TEST_ENVDIR} && ./erc20.js 0-0-2.wasm \{\"0\":\"64\",\"f5b24dcea0e9381721a8c72784d30cfe64c11b4591226269f839d095b3e9cf10\":\"5a\",\"3cbd4ff31ab6027f35d2d04a81e2957deb3a24998b9cea0327c6e16d0b547a1d\":\"a\"\} balanceOf 0x01'
    - ${BASE_BINDIR}/tools/soll/soll -action=EmitFuncSig ${TEST_SRCDIR}/0-0-2.sol
    - ${BASE_BINDIR}/tools/soll/soll -action=EmitABI ${TEST_SRCDIR}/0-0-2.sol
  cache:
    key: ${OS}-${COMPILER}
    paths:
      - ${BASE_BINDIR}
    policy: pull

build:ubuntu-gcc:
  <<: *build_job
  variables:
    OS: "ubuntu"
    COMPILER: "gcc"
  tags:
    - gcc

build:ubuntu-clang:
  <<: *build_job
  variables:
    OS: "ubuntu"
    COMPILER: "clang"
  tags:
    - clang

build:ubuntu-clang-evm-backend:
  stage: build
  image: hydai/ubuntu-soll-build-evm_llvm:20190918
  tags:
    - evm
  before_script:
    - rm -rf ${BASE_BINDIR}
    - mkdir ${BASE_BINDIR}
    - cd ${BASE_BINDIR}
  script:
    - cmake .. -DCMAKE_BUILD_TYPE=Debug -DSOLL_INCLUDE_TESTS=true -DSOLL_ENABLE_EVM=true -DLLVM_CMAKE_PATH=/evm_llvm_build
    - make -j2
  cache:
    key: ubuntu-clang-evm
    paths:
      - ${BASE_BINDIR}
    policy: push


compile:ubuntu-gcc:
  <<: *compile_job
  variables:
    OS: "ubuntu"
    COMPILER: "gcc"
  tags:
    - gcc

compile:ubuntu-clang:
  <<: *compile_job
  variables:
    OS: "ubuntu"
    COMPILER: "clang"
  tags:
    - clang

test:ubuntu-gcc:
  <<: *test_job
  variables:
    OS: "ubuntu"
    COMPILER: "gcc"
  tags:
    - gcc

test:ubuntu-clang:
  <<: *test_job
  variables:
    OS: "ubuntu"
    COMPILER: "clang"
  tags:
    - clang
