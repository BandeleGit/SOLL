variables:
  GIT_SUBMODULE_STRATEGY: recursive
  BASE_BINDIR: build
  TEST_SRCDIR: test/release
  TEST_ENVDIR: utils/ewasm-testbench

stages:
  - build
  - compile
  - test

.build_job_template: &build_job
  stage: build
  image: secondstate/soll:${OS}-${COMPILER}
  before_script:
    - rm -rf ${BASE_BINDIR}
    - mkdir ${BASE_BINDIR}
    - cd ${BASE_BINDIR}
  script:
    - cmake .. -DCMAKE_BUILD_TYPE=Debug -DSOLL_INCLUDE_TESTS=true
    - make -j2
  cache:
    key: ${OS}-${COMPILER}
    paths:
      - ${BASE_BINDIR}
    policy: push

.compile_job_template: &compile_job
  stage: compile
  image: secondstate/soll:${OS}-compile
  script:
    - ${BASE_BINDIR}/tools/soll/soll -action=EmitFuncSig ${TEST_SRCDIR}/0-0-1.sol
    - ${BASE_BINDIR}/tools/soll/soll -action=EmitABI     ${TEST_SRCDIR}/0-0-1.sol
    - ${BASE_BINDIR}/tools/soll/soll -action=EmitFuncSig ${TEST_SRCDIR}/0-0-2.sol
    - ${BASE_BINDIR}/tools/soll/soll -action=EmitABI     ${TEST_SRCDIR}/0-0-2.sol
    - bash -c "${BASE_BINDIR}/tools/soll/soll ${TEST_ENVDIR}/test/safeMath.sol > ${BASE_BINDIR}/safeMath.ll"
    - bash -c "${BASE_BINDIR}/tools/soll/soll ${TEST_ENVDIR}/test/erc20.sol    > ${BASE_BINDIR}/erc20.ll"
    - bash -c "${BASE_BINDIR}/tools/soll/soll ${TEST_ENVDIR}/test/forStmt.sol  > ${BASE_BINDIR}/forStmt.ll"
    - bash -c "./utils/compile -v ${BASE_BINDIR}/*.ll || test -f ${BASE_BINDIR}/safeMath.wasm -a -f ${BASE_BINDIR}/erc20.wasm -a -f ${BASE_BINDIR}/forStmt.wasm"
  cache:
    key: ${OS}-${COMPILER}
    paths:
      - ${BASE_BINDIR}
    policy: pull-push

.test_job_template: &test_job
  stage: test
  image: secondstate/soll:${OS}-test
  before_script:
    - cp ${BASE_BINDIR}/*.wasm ${TEST_ENVDIR}/test
  script:
    - bash -c "cd ${BASE_BINDIR} && ctest"
    - bash -c "cd ${TEST_ENVDIR} && mocha"
  cache:
    key: ${OS}-${COMPILER}
    paths:
      - ${BASE_BINDIR}
    policy: pull

build:ubuntu-gcc:
  <<: *build_job
  variables:
    OS: "ubuntu"
    COMPILER: "gcc"
  tags:
    - gcc

build:ubuntu-clang:
  <<: *build_job
  variables:
    OS: "ubuntu"
    COMPILER: "clang"
  tags:
    - clang

build:ubuntu-clang-evm-backend:
  stage: build
  image: hydai/ubuntu-soll-build-evm_llvm:20190918
  tags:
    - evm
  before_script:
    - rm -rf ${BASE_BINDIR}
    - mkdir ${BASE_BINDIR}
    - cd ${BASE_BINDIR}
  script:
    - cmake .. -DCMAKE_BUILD_TYPE=Debug -DSOLL_INCLUDE_TESTS=true -DSOLL_ENABLE_EVM=true -DLLVM_CMAKE_PATH=/evm_llvm_build
    - make -j2
  cache:
    key: ubuntu-clang-evm
    paths:
      - ${BASE_BINDIR}
    policy: push


compile:ubuntu-gcc:
  <<: *compile_job
  variables:
    OS: "ubuntu"
    COMPILER: "gcc"
  tags:
    - gcc

compile:ubuntu-clang:
  <<: *compile_job
  variables:
    OS: "ubuntu"
    COMPILER: "clang"
  tags:
    - clang

test:ubuntu-gcc:
  <<: *test_job
  variables:
    OS: "ubuntu"
    COMPILER: "gcc"
  tags:
    - gcc

test:ubuntu-clang:
  <<: *test_job
  variables:
    OS: "ubuntu"
    COMPILER: "clang"
  tags:
    - clang
